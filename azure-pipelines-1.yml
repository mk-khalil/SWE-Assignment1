# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2b6a6178-b659-4e93-be24-6b06100b7e4a'
  imageRepository: 'sweassignmentimage'
  containerRegistry: 'sweass1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Add the DOCKER_BUILDKIT variable
  DOCKER_BUILDKIT: 1


  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  #name: Default

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      #name: Default
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
- stage: Test
  displayName: Test stage
  jobs:
  - job: RunAcceptanceTests
    displayName: Run Acceptance Tests
    pool:
      #name: Default
      vmImage: $(vmImageName)
    steps:
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python test_acceptance.py
        displayName: 'Run acceptance tests'

- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
    - job: BuildAndTestJob
      displayName: 'Build and Test Job'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        # Your build and test steps go here
        - script: echo 'Building and testing...'

- stage: ManualTesting
  displayName: 'Manual Testing'
  dependsOn: BuildAndTest
  condition: succeeded()
  jobs:
    - job: ManualTestingJob
      displayName: 'Manual Testing Job'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - checkout: none
        - task: ManualIntervention@8
          inputs:
            instructions: 'Perform manual testing and then resume the pipeline.'
            emailRecipients: '201801898@zewailcity.edu.eg' 

- stage: DeployToProduction
  displayName: 'Deploy to Production'
  dependsOn: ManualTesting
  condition: succeeded()
  jobs:
    - deployment: DeployToProductionJob
      displayName: 'Deploy to Production Job'
      environment: 'swe_ass1_deployment'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
              # Your deployment steps go here
              - script: echo 'Deploying to production...'
